{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88b577ac_e86be4e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25732
      },
      "writtenOn": "2024-02-20T22:09:54Z",
      "side": 1,
      "message": "Instead of hardcoding third party public keys (\u003d no control over the keys, keys can leak blah blah), how about providing flashable zips (like MTG) but with GmsCore signed with LineageOS platform keys?",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39862c7d_6eecb768",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28423
      },
      "writtenOn": "2024-02-20T22:14:23Z",
      "side": 1,
      "message": "I think that shipping custom MicroG is indeed a better idea than hardcoding keys, Mostly because yes, I\u0027m pretty sure the resources needed for that to be automated aren\u0027t that extensive.",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cd1d735_3e3cf18f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2195
      },
      "writtenOn": "2024-02-20T22:17:48Z",
      "side": 1,
      "message": "Note that this doesn\u0027t give that much access either way. Let\u0027s say the keys leak, then what? Someone could make a rogue `com.google.android.gms` that is allowed to spoof signature on LineageOS, but that\u0027s all the access this gets you.\n\nJust to keep things simpler.",
      "parentUuid": "88b577ac_e86be4e4",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37adc63d_f7c30895",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 33489
      },
      "writtenOn": "2024-02-21T09:04:46Z",
      "side": 1,
      "message": "If you wanted to make it something tied to a flashable zip, one option would be to allow apps in system dir to do signature spoofing, independent of their signature. Then microg could provide a flashable zip to install the two microg components to system dir.\n\nSome might wonder if there\u0027s anything to do security-wise for the flashable zip, as malicious flashable zips could then use signature spoofing. But malicious flashable zips can already do *everything*, so that\u0027s really a non-issue.\n\nAlso, signatures for system apps are not even verified (see https://github.com/LineageOS/android_frameworks_base/blob/lineage-21.0/core/java/android/content/pm/PackageParser.java#L1428), so technically microg could already today provide such a flashable zip and spoof a google signature. They don\u0027t, because that way it wouldn\u0027t be possible for users to easily install updates (signatures of updates to system apps are properly verified). Also this would be a more invasive way of signature spoofing, because even the OS and all its security APIs relying on signatures (like permissions with signature level, shared uid, etc) would be affected.\n\nAll in all, I think the solution in this patch is superior, providing better security for the users than any of the alternatives (asking users to install a flashable zip really isn\u0027t a good solution from security perspective).",
      "parentUuid": "5cd1d735_3e3cf18f",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16f664c9_db36f3de",
        "filename": "services/core/java/com/android/server/pm/ComputerEngine.java",
        "patchSetId": 1
      },
      "lineNbr": 1469,
      "author": {
        "id": 11801
      },
      "writtenOn": "2024-02-21T05:35:11Z",
      "side": 1,
      "message": "One thought would be to make this a list somewhere up above and do list.contains(). However given this list is just 2 apps and is fixed, it might not be worth it.",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7496a6b0_6aeb701a",
        "filename": "services/core/java/com/android/server/pm/ComputerEngine.java",
        "patchSetId": 1
      },
      "lineNbr": 1469,
      "author": {
        "id": 10067
      },
      "writtenOn": "2024-02-21T07:38:49Z",
      "side": 1,
      "message": "I thought of having a map of packageName -\u003e (real, fake) but in the end, I think that might be an overkill for something like this.",
      "parentUuid": "16f664c9_db36f3de",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c615076e_235a0e33",
        "filename": "services/core/java/com/android/server/pm/ComputerEngine.java",
        "patchSetId": 1
      },
      "lineNbr": 1469,
      "author": {
        "id": 13648
      },
      "writtenOn": "2024-02-21T11:05:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7496a6b0_6aeb701a",
      "revId": "9c86a47e24b1d1e2ba317503d279cfd1628ef06e",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71"
    }
  ],
  "submitRequirementResults": []
}